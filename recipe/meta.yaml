{% set name = "pyvkfft" %}
{% set version = "2024.1.1" %}
{% if cuda_compiler_version is undefined %}
{% set cuda_compiler_version = "None" %}
{% endif %}
{% set cuda_major = 0 if cuda_compiler_version == "None" else cuda_compiler_version|int %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pyvkfft-{{ version }}.tar.gz
  sha256: 71581507a9402e2f9552cf31f10827d47e59879bfdc088ee73a11700b4e75c53
  patches:
    - conda_libraries.diff

build:
  number: 0
  entry_points:
    - pyvkfft-test = pyvkfft.scripts.pyvkfft_test:main
  script:
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  ignore_run_exports_from:
    - {{ compiler('cuda') }}

# TODO: why is gxx needed in addition of compiler{cxx} ? Otherwise cuda fails to find gcc ?
requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - gxx  # [linux]
    - {{ compiler('cuda') }}                 # [cuda_compiler_version != "None"]
  host:
    - cuda-nvrtc-dev      # [(cuda_compiler_version or "").startswith("12")]
    - pip
    - python
    - ocl-icd  # [linux]
    - khronos-opencl-icd-loader  # [win or osx]
    - ocl_icd_wrapper_apple  # [osx]
  run:
    - numpy
    - psutil
    - pyopencl
    - python
    - __cuda >={{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
  run_constrained:
    - __cuda <0.0a0  # [cuda_compiler_version == "None"]
    - cudatoolkit =={{ cuda_compiler_version }}  # [cuda_compiler_version in ('10.2', '11.0', '11.1')]
    - cudatoolkit >={{ cuda_compiler_version }},<11.8  # [cuda_compiler_version == '11.2']
    - cudatoolkit >={{ cuda_compiler_version }},<12  # [cuda_compiler_version == '11.8']
    {% if cuda_major >=12 %}
    - cudatoolkit >={{ cuda_compiler_version }},<{{ cuda_major + 1 }}.0a0
    {% endif %}

test:
  imports:
    - pyvkfft
#  commands:
#    - pyvkfft-test --help

about:
  home: https://github.com/vincefn/pyvkfft
  summary: Python wrapper for the CUDA and OpenCL backends of VkFFT, providing GPU FFT for PyCUDA, PyOpenCL and CuPy
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - vincefn
    - isuruf
